# Sergio Manzano Sánchez
# Epigenomics: PRACTICAL ASSIGNMENT

#######################################################################################################################################################################################################
################################################################################ 4. EN‐TEx ATAC‐seq data: downstream analyses ##########################################################################
#######################################################################################################################################################################################################

#####------------------------------------------------------------------------------------------QUESTION 1-----------------------------------------------------------------------------------------#####
##### Move to folder ATAC-seq, and create folders to store bigBed data files and peaks analyses files. 
#####---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#####

# Run the container	

	sudo docker run -v $PWD:$PWD -w $PWD --rm -it dgarrimar/epigenomics_course

# Change the directory

	cd ATAC-seq

# Create the new folders

	mkdir analyses
	mkdir data
	mkdir data/bigBed.files data/bigWig.files



#####-----------------------------------------------------------------------------------------QUESTION 2------------------------------------------------------------------------------------------#####
##### Retrieve from a newly generated metadata file ATAC-seq peaks (bigBed narrow, pseudoreplicated peaks, assembly GRCh38) for stomach and sigmoid_colon for the same donor used in the previous   
##### sections. Make sure your md5sum values coincide with the ones provided by ENCODE.
#####---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#####

# Create the metadata file
	../bin/download.metadata.sh "https://www.encodeproject.org/metadata/?replicates.library.biosample.donor.uuid=d370683e-81e7-473f-8475-7716d027849b&status=released&status=submitted&status=in+progress&assay_title=ATAC-seq&biosample_ontology.term_name=sigmoid+colon&biosample_ontology.term_name=stomach&type=Experiment"

# Download peak calling and fold-change signal files

	grep -F "bigBed_narrowPeak" metadata.tsv |\
	grep -F "pseudoreplicated_peaks" |\
	grep -F "GRCh38" |\
	awk 'BEGIN{FS=OFS="\t"}{print $1, $11}' |\
	sort -k2,2 -k1,1r |\
	sort -k2,2 -u > analyses/bigBed.peaks.ids.txt
	
	
	cut -f1 analyses/bigBed.peaks.ids.txt |\
	while read filename; do
	  wget -P data/bigBed.files "https://www.encodeproject.org/files/$filename/@@download/$filename.bigBed"
	done

# Check the integrity of the downloaded files

	for file_type in bigBed; do
	
	  ## retrieve original MD5 hash from the metadata
	  ../bin/selectRows.sh <(cut -f1 analyses/"$file_type".*.ids.txt) metadata.tsv | cut -f1,46 > data/"$file_type".files/md5sum.txt
	
	  ## compute MD5 hash on the downloaded files 
	  cat data/"$file_type".files/md5sum.txt |\
	  while read filename original_md5sum; do 
	    md5sum data/"$file_type".files/"$filename"."$file_type" |\
	    awk -v filename="$filename" -v original_md5sum="$original_md5sum" 'BEGIN{FS=" "; OFS="\t"}{print filename, original_md5sum, $1}' 
	  done > tmp 
	  mv tmp data/"$file_type".files/md5sum.txt
	
	  ## make sure there are no files for which original and computed MD5 hashes differ
	  awk '$2!=$3' data/"$file_type".files/md5sum.txt
	
	done

#####-----------------------------------------------------------------------------------------QUESTION 3------------------------------------------------------------------------------------------#####
##### For each tissue, run an intersection analysis using BEDTools: report 1) the number of peaks that intersect promoter regions, 2) the number of peaks that fall outside gene coordinates (whole 
##### gene body, not just the promoter regions). 
#####---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#####

# Convert bigBed files of H3K4me3 peaks to BED files with the bigBedToBed command:

	mkdir data/bed.files
	
	cut -f1 analyses/bigBed.peaks.ids.txt |\
	while read filename; do
	  bigBedToBed data/bigBed.files/"$filename".bigBed data/bed.files/"$filename".bed
	done

# Download from here the list of promoters ([-2 kb, +2 Kb] from TSS) of protein-coding genes. Store this file inside the annotation folder.

	mkdir annotation
	
	cd annotation
	
	cp ../../ChIP-seq/annotation/gencode.v24.protein.coding.non.redundant.TSS.bed .

# 1) The number of peaks that intersect promoter regions

	cut -f-2 analyses/bigBed.peaks.ids.txt |\
	while read filename tissue; do
	  echo "$tissue"
	  bedtools intersect -a data/bed.files/"$filename".bed  -b annotation/gencode.v24.protein.coding.non.redundant.TSS.bed -u |\
	  wc -l
	done

	####### RESULTS #######

	# sigmoid_colon --> 47871  # stomach --> 44749



# 2) The number of peaks that fall outside gene coordinates (whole gene body, not just the promoter regions).

# Download the BED file with gene body coordinates of protein-coding genes

	wget -P annotation "https://www.encodeproject.org/files/gencode.v24.primary_assembly.annotation/@@download/gencode.v24.primary_assembly.annotation.gtf.gz"

# Uncompress the file

	gunzip annotation/gencode.v24.primary_assembly.annotation.gtf.gz

# The number of peaks that fall outside gene coordinates (whole gene body, not just the promoter regions)

	cut -f-2 analyses/bigBed.peaks.ids.txt |\
	while read filename tissue; do
	  echo "$tissue"
	  bedtools intersect -a data/bed.files/"$filename".bed  -b annotation/gencode.v24.protein.coding.gene.body.bed -v |\
	  wc -l
	done
	
	####### RESULTS #######
	
	# sigmoid_colon --> 37035  # stomach --> 34537



#######################################################################################################################################################################################################
################################################################################ 5. Distal regulatory activity ########################################################################################
#######################################################################################################################################################################################################

##### From section 4., you should have obtained a set of ATAC-seq peaks in stomach and sigmoid_colon that lie outside gene coordinates. We will use these peaks as a starting point to build a ##### catalogue of distal regulatory regions.


#####------------------------------------------------------------------------------------------TASK 1---------------------------------------------------------------------------------------------#####
##### Create a folder regulatory_elements inside epigenomics_uvic. This will be the folder where you store all your subsequent results.
#####---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#####

# Create the folders

	mkdir regulatory_elements
	cd regulatory_elements


#####------------------------------------------------------------------------------------------TASK 2---------------------------------------------------------------------------------------------#####
##### Distal regulatory regions are usually found to be flanked by both H3K27ac and H3K4me1. From your starting catalogue of open regions in each tissue, select those that overlap peaks of H3K27ac 
##### AND H3K4me1 in the corresponding tissue. You will get a list of candidate distal regulatory elements for each tissue. How many are they?
#####---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#####

# Download the needed files

	../bin/download.metadata.sh "https://www.encodeproject.org/metadata/?replicates.library.biosample.donor.uuid=d370683e-81e7-473f-8475-7716d027849b&status=released&status=submitted&status=in+progress&assay_title=Histone+ChIP-seq&target.label=H3K27ac&target.label=H3K4me1&biosample_ontology.term_name=sigmoid+colon&biosample_ontology.term_name=stomach&type=Experiment"

# Download peak calling and fold-change signal files

	## Create a new folder to store the data

		mkdir analyses
	
	## Select the needed files for H3K4me1 
	
		grep -F H3K4me1 metadata.tsv |\
		grep -F "bigBed_narrowPeak" |\
		grep -F "pseudoreplicated_peaks" |\
		grep -F "GRCh38" |\
		awk 'BEGIN{FS=OFS="\t"}{print $1, $11, $23}' |\
		sort -k2,2 -k1,1r |\
		sort -k2,2 -u > analyses/bigBed.peaks.ids.txt
	
	
	## Select the needed files for H3K27ac
	
		grep -F H3K27ac metadata.tsv |\
		grep -F "bigBed_narrowPeak" |\
		grep -F "pseudoreplicated_peaks" |\
		grep -F "GRCh38" |\
		awk 'BEGIN{FS=OFS="\t"}{print $1, $11, $23}' |\
		sort -k2,2 -k1,1r |\
		sort -k2,2 -u >> analyses/bigBed.peaks.ids.txt

	## Download the selected files
		
		cut -f1 analyses/bigBed.peaks.ids.txt |\
		while read filename; do
		  wget -P data/bigBed.files "https://www.encodeproject.org/files/$filename/@@download/$filename.bigBed"
		done
	
# Check the integrity of the downloaded files:
	
	for file_type in bigBed; do
		
		### retrieve original MD5 hash from the metadata
		  	../bin/selectRows.sh <(cut -f1 analyses/"$file_type".*.ids.txt) metadata.tsv | cut -f1,46 > data/"$file_type".files/md5sum.txt
		
		  ### compute MD5 hash on the downloaded files 
			cat data/"$file_type".files/md5sum.txt |\
			  while read filename original_md5sum; do 
			    md5sum data/"$file_type".files/"$filename"."$file_type" |\
			    awk -v filename="$filename" -v original_md5sum="$original_md5sum" 'BEGIN{FS=" "; OFS="\t"}{print filename, original_md5sum, $1}' 
			  done > tmp 
			  mv tmp data/"$file_type".files/md5sum.txt
		
		  ### make sure there are no files for which original and computed MD5 hashes differ
		  	awk '$2!=$3' data/"$file_type".files/md5sum.txt
		
		done
	
# Go to ATAC-seq folder
	
	cd ../ATAC-seq
	
# Save the ATAC-seq peaks in stomach and sigmoid_colon that lie outside gene coordinates in a file called *outgenebody.bed inside the regulatory elements folder.
	
	cut -f-2 analyses/bigBed.peaks.ids.txt | while read filename tissue; do bedtools intersect -a data/bed.files/"$filename".bed  -b annotation/gencode.v24.protein.coding.gene.body.bed -v | cut -f-4 > ../regulatory_elements/$tissue.outgenebody.bed; done
	
# Go to regulatory elements folder
	
	cd ../regulatory_elements
	
# Convert bigBed files into bed files
	
	mkdir data/bed.files
	
	cut -f1 analyses/bigBed.peaks.ids.txt |\
	while read filename; do
	  bigBedToBed data/bigBed.files/"$filename".bigBed data/bed.files/"$filename".bed
	done
	
	
# Intersect sigmoid colon
	
	bedtools intersect  -a sigmoid_colon.outgenebody.bed -b data/bed.files/ENCFF724ZOF.bed | bedtools intersect -a stdin -b data/bed.files/ENCFF872UHN.bed -u | wc -l # 16214
	
# Intersect stomach
	
	bedtools intersect  -a sigmoid_colon.outgenebody.bed -b data/bed.files/ENCFF844XRN.bed | bedtools intersect -a stdin -b data/bed.files/ENCFF977LBD.bed -u | wc -l # 7995


####### RESULTS #######
	
	# sigmoid_colon --> 16214  # stomach --> 7995



#####------------------------------------------------------------------------------------------TASK 3---------------------------------------------------------------------------------------------#####
##### Focus on regulatory elements that are located on chromosome 1, and generate a file regulatory.elements.starts.tsv that contains the name of the regulatory region (i.e. the name of the original 
##### ATAC-seq peak) and the start (5') coordinate of the region.
#####---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#####


# Save the all the regulatory elements (of both tissues) in the same file

	bedtools intersect  -a sigmoid_colon.outgenebody.bed -b data/bed.files/ENCFF724ZOF.bed | bedtools intersect -a stdin -b data/bed.files/ENCFF872UHN.bed -u > sigmoid_colon_reg_elements
	
	bedtools intersect  -a sigmoid_colon.outgenebody.bed -b data/bed.files/ENCFF844XRN.bed | bedtools intersect -a stdin -b data/bed.files/ENCFF977LBD.bed -u > stomach_reg_elements
	
	cat sigmoid_colon_reg_elements stomach_reg_elements > all_reg_elements


# Make the selection

	awk 'BEGIN{FS=OFS="\t"}$1=="chr1"{print $4, $2}' all_reg_elements > regulatory.elements.starts.tsv



#####------------------------------------------------------------------------------------------TASK 4---------------------------------------------------------------------------------------------#####
##### Focus on protein-coding genes located on chromosome 1. From the BED file of gene body coordinates that you generated here, prepare a tab-separated file called gene.starts.tsv which will store 
##### the name of the gene in the first column, and the start coordinate of the gene on the second column (REMEMBER: for genes located on the minus strand, the start coordinate will be at the 3'). 
#####---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#####

# Make the selection and save in a file called gene.starts.tsv

	awk 'BEGIN{FS=OFS="\t"}$1=="chr1"{if ($6=="+"){start=$2} else {start=$3}; print $4, start}' ../ATAC-seq/annotation/gencode.v24.protein.coding.gene.body.bed > gene.starts.tsv



#####------------------------------------------------------------------------------------------TASK 5---------------------------------------------------------------------------------------------#####
##### Download or copy this python script inside the epigenomics_uvic/bin folder. 
#####---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#####

# Go to bin folder
	cd ../bin

# Paste the script that is in called get.distance

	nano get.distance.py

# Check if the script works

	## Modify the script and check if it runs with the following command (inside regulatory elements folder)

		python ../bin/get.distance.py --input gene.starts.tsv --start 980000 	####### The output should be:  ENSG00000187642.9	982093 2093 #######



#####------------------------------------------------------------------------------------------TASK 6---------------------------------------------------------------------------------------------#####
##### For each regulatory element contained in the file regulatory.elements.starts.tsv, retrieve the closest gene and the distance to the closest gene using the python script you created above. 
#####---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#####

# Inside regulatory elements folder, run the fllowing command

	cat regulatory.elements.starts.tsv | while read element start; do 
	   python ../bin/get.distance.py --input gene.starts.tsv --start $start; 
	done > regulatoryElements.genes.distances.tsv


#####------------------------------------------------------------------------------------------TASK 7---------------------------------------------------------------------------------------------#####
##### Use R to compute the mean and the median of the distances stored in regulatoryElements.genes.distances.tsv.
#####---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#####

# See the Rscript called regulatoryElements_meanandmedian

	## setwd("C:/Users/smanz/OneDrive/Escritorio/OMIC_DATA_ANALYSIS/EPIGENOMICS/ChipSeq/First_TASK")
	
	## regulatoryElements <- read.delim("regulatoryElements.genes.distances.tsv", sep = "\t", header = F)
	
	
	## colnames(regulatoryElements) <- c("closest gene", "start of the gene", "distance RE")
	
	## View(regulatoryElements)
	
	## mean(regulatoryElements$`distance RE`) # Mean of the distance: 63393.14
	## median(regulatoryElements$`distance RE`) # Median of the distance: 31162
